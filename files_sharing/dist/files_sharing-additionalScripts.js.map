{"version":3,"file":"files_sharing-additionalScripts.js?v=292bca6930379c305982","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3fA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClDA;;;;;AEAA;AACA;AACA;AACA;AACA","sources":["webpack:///nextcloud/apps/files_sharing/src/additionalScripts.js","webpack:///nextcloud/apps/files_sharing/src/collaborationresourceshandler.js","webpack:///nextcloud/apps/files_sharing/src/share.js","webpack:///nextcloud/apps/files_sharing/src/sharebreadcrumbview.js","webpack:///nextcloud/apps/files_sharing/src/style/sharebreadcrumb.scss","webpack://nextcloud/./apps/files_sharing/src/style/sharebreadcrumb.scss?a9a3","webpack:///nextcloud/webpack/bootstrap","webpack:///nextcloud/webpack/runtime/chunk loaded","webpack:///nextcloud/webpack/runtime/compat get default export","webpack:///nextcloud/webpack/runtime/define property getters","webpack:///nextcloud/webpack/runtime/global","webpack:///nextcloud/webpack/runtime/hasOwnProperty shorthand","webpack:///nextcloud/webpack/runtime/make namespace object","webpack:///nextcloud/webpack/runtime/node module decorator","webpack:///nextcloud/webpack/runtime/jsonp chunk loading","webpack:///nextcloud/webpack/runtime/nonce","webpack:///nextcloud/webpack/before-startup","webpack:///nextcloud/webpack/startup","webpack:///nextcloud/webpack/after-startup"],"sourcesContent":["/**\n * @copyright Copyright (c) 2016 Roeland Jago Douma <roeland@famdouma.nl>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Julius Härtl <jus@bitgrid.net>\n * @author Roeland Jago Douma <roeland@famdouma.nl>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport './share';\nimport './sharebreadcrumbview';\nimport './style/sharebreadcrumb.scss';\nimport './collaborationresourceshandler.js';\n\n// eslint-disable-next-line camelcase\n__webpack_nonce__ = btoa(OC.requestToken);\nwindow.OCA.Sharing = OCA.Sharing;","/**\n * @copyright Copyright (c) 2016 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Julius Härtl <jus@bitgrid.net>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n// eslint-disable-next-line camelcase\n__webpack_nonce__ = btoa(OC.requestToken);\nwindow.OCP.Collaboration.registerType('file', {\n  action: function action() {\n    return new Promise(function (resolve, reject) {\n      OC.dialogs.filepicker(t('files_sharing', 'Link to a file'), function (f) {\n        var client = OC.Files.getClient();\n        client.getFileInfo(f).then(function (status, fileInfo) {\n          resolve(fileInfo.id);\n        }).fail(function () {\n          reject(new Error('Cannot get fileinfo'));\n        });\n      }, false, null, false, OC.dialogs.FILEPICKER_TYPE_CHOOSE, '', {\n        allowDirectoryChooser: true\n      });\n    });\n  },\n  typeString: t('files_sharing', 'Link to a file'),\n  typeIconClass: 'icon-files-dark'\n});","/**\n * Copyright (c) 2014\n *\n * @author Arthur Schiwon <blizzz@arthur-schiwon.de>\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n * @author Daniel Calviño Sánchez <danxuliu@gmail.com>\n * @author Joas Schilling <coding@schilljs.com>\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Julius Härtl <jus@bitgrid.net>\n * @author Maxence Lange <maxence@nextcloud.com>\n * @author Michael Jobst <mjobst+github@tecratech.de>\n * @author Michael Jobst <mjobst@necls.com>\n * @author Morris Jobke <hey@morrisjobke.de>\n * @author Roeland Jago Douma <roeland@famdouma.nl>\n * @author Samuel <faust64@gmail.com>\n * @author Vincent Petry <vincent@nextcloud.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/* eslint-disable */\nimport escapeHTML from 'escape-html';\nimport { Type as ShareTypes } from '@nextcloud/sharing';\nimport { getCapabilities } from '@nextcloud/capabilities';\n(function () {\n  _.extend(OC.Files.Client, {\n    PROPERTY_SHARE_TYPES: '{' + OC.Files.Client.NS_OWNCLOUD + '}share-types',\n    PROPERTY_OWNER_ID: '{' + OC.Files.Client.NS_OWNCLOUD + '}owner-id',\n    PROPERTY_OWNER_DISPLAY_NAME: '{' + OC.Files.Client.NS_OWNCLOUD + '}owner-display-name'\n  });\n  if (!OCA.Sharing) {\n    OCA.Sharing = {};\n  }\n\n  /**\n   * @namespace\n   */\n  OCA.Sharing.Util = {\n    /**\n     * Regular expression for splitting parts of remote share owners:\n     * \"user@example.com/\"\n     * \"user@example.com/path/to/owncloud\"\n     * \"user@anotherexample.com@example.com/path/to/owncloud\n     */\n    _REMOTE_OWNER_REGEXP: new RegExp('^(([^@]*)@(([^@^/\\\\s]*)@)?)((https://)?[^[\\\\s/]*)([/](.*))?$'),\n    /**\n     * Initialize the sharing plugin.\n     *\n     * Registers the \"Share\" file action and adds additional\n     * DOM attributes for the sharing file info.\n     *\n     * @param {OCA.Files.FileList} fileList file list to be extended\n     */\n    attach: function attach(fileList) {\n      var _getCapabilities$file;\n      // core sharing is disabled/not loaded\n      if (!((_getCapabilities$file = getCapabilities().files_sharing) !== null && _getCapabilities$file !== void 0 && _getCapabilities$file.api_enabled)) {\n        return;\n      }\n      if (fileList.id === 'trashbin' || fileList.id === 'files.public') {\n        return;\n      }\n      var fileActions = fileList.fileActions;\n      var oldCreateRow = fileList._createRow;\n      fileList._createRow = function (fileData) {\n        var tr = oldCreateRow.apply(this, arguments);\n        var sharePermissions = OCA.Sharing.Util.getSharePermissions(fileData);\n        if (fileData.permissions === 0) {\n          // no permission, disabling sidebar\n          delete fileActions.actions.all.Comment;\n          delete fileActions.actions.all.Details;\n          delete fileActions.actions.all.Goto;\n        }\n        if (_.isFunction(fileData.canDownload) && !fileData.canDownload()) {\n          delete fileActions.actions.all.Download;\n          if ((fileData.permissions & OC.PERMISSION_UPDATE) === 0) {\n            // neither move nor copy is allowed, remove the action completely\n            delete fileActions.actions.all.MoveCopy;\n          }\n        }\n        tr.attr('data-share-permissions', sharePermissions);\n        tr.attr('data-share-attributes', JSON.stringify(fileData.shareAttributes));\n        if (fileData.shareOwner) {\n          tr.attr('data-share-owner', fileData.shareOwner);\n          tr.attr('data-share-owner-id', fileData.shareOwnerId);\n          // user should always be able to rename a mount point\n          if (fileData.mountType === 'shared-root') {\n            tr.attr('data-permissions', fileData.permissions | OC.PERMISSION_UPDATE);\n          }\n        }\n        if (fileData.recipientData && !_.isEmpty(fileData.recipientData)) {\n          tr.attr('data-share-recipient-data', JSON.stringify(fileData.recipientData));\n        }\n        if (fileData.shareTypes) {\n          tr.attr('data-share-types', fileData.shareTypes.join(','));\n        }\n        return tr;\n      };\n      var oldElementToFile = fileList.elementToFile;\n      fileList.elementToFile = function ($el) {\n        var fileInfo = oldElementToFile.apply(this, arguments);\n        fileInfo.shareAttributes = JSON.parse($el.attr('data-share-attributes') || '[]');\n        fileInfo.sharePermissions = $el.attr('data-share-permissions') || undefined;\n        fileInfo.shareOwner = $el.attr('data-share-owner') || undefined;\n        fileInfo.shareOwnerId = $el.attr('data-share-owner-id') || undefined;\n        if ($el.attr('data-share-types')) {\n          fileInfo.shareTypes = $el.attr('data-share-types').split(',');\n        }\n        if ($el.attr('data-expiration')) {\n          var expirationTimestamp = parseInt($el.attr('data-expiration'));\n          fileInfo.shares = [];\n          fileInfo.shares.push({\n            expiration: expirationTimestamp\n          });\n        }\n        return fileInfo;\n      };\n      var oldGetWebdavProperties = fileList._getWebdavProperties;\n      fileList._getWebdavProperties = function () {\n        var props = oldGetWebdavProperties.apply(this, arguments);\n        props.push(OC.Files.Client.PROPERTY_OWNER_ID);\n        props.push(OC.Files.Client.PROPERTY_OWNER_DISPLAY_NAME);\n        props.push(OC.Files.Client.PROPERTY_SHARE_TYPES);\n        return props;\n      };\n      fileList.filesClient.addFileInfoParser(function (response) {\n        var data = {};\n        var props = response.propStat[0].properties;\n        var permissionsProp = props[OC.Files.Client.PROPERTY_PERMISSIONS];\n        if (permissionsProp && permissionsProp.indexOf('S') >= 0) {\n          data.shareOwner = props[OC.Files.Client.PROPERTY_OWNER_DISPLAY_NAME];\n          data.shareOwnerId = props[OC.Files.Client.PROPERTY_OWNER_ID];\n        }\n        var shareTypesProp = props[OC.Files.Client.PROPERTY_SHARE_TYPES];\n        if (shareTypesProp) {\n          data.shareTypes = _.chain(shareTypesProp).filter(function (xmlvalue) {\n            return xmlvalue.namespaceURI === OC.Files.Client.NS_OWNCLOUD && xmlvalue.nodeName.split(':')[1] === 'share-type';\n          }).map(function (xmlvalue) {\n            return parseInt(xmlvalue.textContent || xmlvalue.text, 10);\n          }).value();\n        }\n        return data;\n      });\n\n      // use delegate to catch the case with multiple file lists\n      fileList.$el.on('fileActionsReady', function (ev) {\n        var $files = ev.$files;\n        _.each($files, function (file) {\n          var $tr = $(file);\n          var shareTypesStr = $tr.attr('data-share-types') || '';\n          var shareOwner = $tr.attr('data-share-owner');\n          if (shareTypesStr || shareOwner) {\n            var hasLink = false;\n            var hasShares = false;\n            _.each(shareTypesStr.split(',') || [], function (shareTypeStr) {\n              var shareType = parseInt(shareTypeStr, 10);\n              if (shareType === ShareTypes.SHARE_TYPE_LINK) {\n                hasLink = true;\n              } else if (shareType === ShareTypes.SHARE_TYPE_EMAIL) {\n                hasLink = true;\n              } else if (shareType === ShareTypes.SHARE_TYPE_USER) {\n                hasShares = true;\n              } else if (shareType === ShareTypes.SHARE_TYPE_GROUP) {\n                hasShares = true;\n              } else if (shareType === ShareTypes.SHARE_TYPE_REMOTE) {\n                hasShares = true;\n              } else if (shareType === ShareTypes.SHARE_TYPE_REMOTE_GROUP) {\n                hasShares = true;\n              } else if (shareType === ShareTypes.SHARE_TYPE_CIRCLE) {\n                hasShares = true;\n              } else if (shareType === ShareTypes.SHARE_TYPE_ROOM) {\n                hasShares = true;\n              } else if (shareType === ShareTypes.SHARE_TYPE_DECK) {\n                hasShares = true;\n              } else if (shareType === ShareTypes.SHARE_TYPE_SCIENCEMESH) {\n                hasShares = true;\n              }\n            });\n            OCA.Sharing.Util._updateFileActionIcon($tr, hasShares, hasLink);\n          }\n        });\n      });\n      fileList.$el.on('changeDirectory', function () {\n        OCA.Sharing.sharesLoaded = false;\n      });\n      fileActions.registerAction({\n        name: 'Share',\n        displayName: function displayName(context) {\n          if (context && context.$file) {\n            var shareType = parseInt(context.$file.data('share-types'), 10);\n            var shareOwner = context.$file.data('share-owner-id');\n            if (shareType >= 0 || shareOwner) {\n              return t('files_sharing', 'Shared');\n            }\n          }\n          return t('files_sharing', 'Share');\n        },\n        altText: t('files_sharing', 'Share'),\n        mime: 'all',\n        order: -150,\n        permissions: OC.PERMISSION_ALL,\n        iconClass: function iconClass(fileName, context) {\n          var shareType = parseInt(context.$file.data('share-types'), 10);\n          if (shareType === ShareTypes.SHARE_TYPE_EMAIL || shareType === ShareTypes.SHARE_TYPE_LINK) {\n            return 'icon-public';\n          }\n          return 'icon-shared';\n        },\n        icon: function icon(fileName, context) {\n          var shareOwner = context.$file.data('share-owner-id');\n          if (shareOwner) {\n            return OC.generateUrl(\"/avatar/\".concat(shareOwner, \"/32\"));\n          }\n        },\n        type: OCA.Files.FileActions.TYPE_INLINE,\n        actionHandler: function actionHandler(fileName, context) {\n          // details view disabled in some share lists\n          if (!fileList._detailsView) {\n            return;\n          }\n          // do not open sidebar if permission is set and equal to 0\n          var permissions = parseInt(context.$file.data('share-permissions'), 10);\n          if (isNaN(permissions) || permissions > 0) {\n            fileList.showDetailsView(fileName, 'sharing');\n          }\n        },\n        render: function render(actionSpec, isDefault, context) {\n          var permissions = parseInt(context.$file.data('permissions'), 10);\n          // if no share permissions but share owner exists, still show the link\n          if ((permissions & OC.PERMISSION_SHARE) !== 0 || context.$file.attr('data-share-owner')) {\n            return fileActions._defaultRenderAction.call(fileActions, actionSpec, isDefault, context);\n          }\n          // don't render anything\n          return null;\n        }\n      });\n\n      // register share breadcrumbs component\n      var breadCrumbSharingDetailView = new OCA.Sharing.ShareBreadCrumbView();\n      fileList.registerBreadCrumbDetailView(breadCrumbSharingDetailView);\n    },\n    /**\n     * Update file list data attributes\n     */\n    _updateFileListDataAttributes: function _updateFileListDataAttributes(fileList, $tr, shareModel) {\n      // files app current cannot show recipients on load, so we don't update the\n      // icon when changed for consistency\n      if (fileList.id === 'files') {\n        return;\n      }\n      var recipients = _.pluck(shareModel.get('shares'), 'share_with_displayname');\n      // note: we only update the data attribute because updateIcon()\n      if (recipients.length) {\n        var recipientData = _.mapObject(shareModel.get('shares'), function (share) {\n          return {\n            shareWith: share.share_with,\n            shareWithDisplayName: share.share_with_displayname\n          };\n        });\n        $tr.attr('data-share-recipient-data', JSON.stringify(recipientData));\n      } else {\n        $tr.removeAttr('data-share-recipient-data');\n      }\n    },\n    /**\n     * Update the file action share icon for the given file\n     *\n     * @param $tr file element of the file to update\n     * @param {boolean} hasUserShares true if a user share exists\n     * @param {boolean} hasLinkShares true if a link share exists\n     *\n     * @returns {boolean} true if the icon was set, false otherwise\n     */\n    _updateFileActionIcon: function _updateFileActionIcon($tr, hasUserShares, hasLinkShares) {\n      // if the statuses are loaded already, use them for the icon\n      // (needed when scrolling to the next page)\n      if (hasUserShares || hasLinkShares || $tr.attr('data-share-recipient-data') || $tr.attr('data-share-owner')) {\n        OCA.Sharing.Util._markFileAsShared($tr, true, hasLinkShares);\n        return true;\n      }\n      return false;\n    },\n    /**\n     * Marks/unmarks a given file as shared by changing its action icon\n     * and folder icon.\n     *\n     * @param $tr file element to mark as shared\n     * @param hasShares whether shares are available\n     * @param hasLink whether link share is available\n     */\n    _markFileAsShared: function _markFileAsShared($tr, hasShares, hasLink) {\n      var action = $tr.find('.fileactions .action[data-action=\"Share\"]');\n      var type = $tr.data('type');\n      var icon = action.find('.icon');\n      var message, recipients, avatars;\n      var ownerId = $tr.attr('data-share-owner-id');\n      var owner = $tr.attr('data-share-owner');\n      var mountType = $tr.attr('data-mounttype');\n      var shareFolderIcon;\n      var iconClass = 'icon-shared';\n      action.removeClass('shared-style');\n      // update folder icon\n      var isEncrypted = $tr.attr('data-e2eencrypted');\n      if (type === 'dir' && isEncrypted === 'true') {\n        shareFolderIcon = OC.MimeType.getIconUrl('dir-encrypted');\n        $tr.attr('data-icon', shareFolderIcon);\n      } else if (type === 'dir' && (hasShares || hasLink || ownerId)) {\n        if (typeof mountType !== 'undefined' && mountType !== 'shared-root' && mountType !== 'shared') {\n          shareFolderIcon = OC.MimeType.getIconUrl('dir-' + mountType);\n        } else if (hasLink) {\n          shareFolderIcon = OC.MimeType.getIconUrl('dir-public');\n        } else {\n          shareFolderIcon = OC.MimeType.getIconUrl('dir-shared');\n        }\n        $tr.find('.filename .thumbnail').css('background-image', 'url(' + shareFolderIcon + ')');\n        $tr.attr('data-icon', shareFolderIcon);\n      } else if (type === 'dir') {\n        // FIXME: duplicate of FileList._createRow logic for external folder,\n        // need to refactor the icon logic into a single code path eventually\n        if (mountType && mountType.indexOf('external') === 0) {\n          shareFolderIcon = OC.MimeType.getIconUrl('dir-external');\n          $tr.attr('data-icon', shareFolderIcon);\n        } else {\n          shareFolderIcon = OC.MimeType.getIconUrl('dir');\n          // back to default\n          $tr.removeAttr('data-icon');\n        }\n        $tr.find('.filename .thumbnail').css('background-image', 'url(' + shareFolderIcon + ')');\n      }\n      // update share action text / icon\n      if (hasShares || ownerId) {\n        recipients = $tr.data('share-recipient-data');\n        action.addClass('shared-style');\n        avatars = '<span>' + t('files_sharing', 'Shared') + '</span>';\n        // even if reshared, only show \"Shared by\"\n        if (ownerId) {\n          message = t('files_sharing', 'Shared by');\n          avatars = OCA.Sharing.Util._formatRemoteShare(ownerId, owner, message);\n        } else if (recipients) {\n          avatars = OCA.Sharing.Util._formatShareList(recipients);\n        }\n        action.html(avatars).prepend(icon);\n        if (ownerId || recipients) {\n          var avatarElement = action.find('.avatar');\n          avatarElement.each(function () {\n            $(this).avatar($(this).data('username'), 32);\n          });\n        }\n      } else {\n        action.html('<span class=\"hidden-visually\">' + t('files_sharing', 'Shared') + '</span>').prepend(icon);\n      }\n      if (hasLink) {\n        iconClass = 'icon-public';\n      }\n      icon.removeClass('icon-shared icon-public').addClass(iconClass);\n    },\n    /**\n     * Format a remote address\n     *\n     * @param {String} shareWith userid, full remote share, or whatever\n     * @param {String} shareWithDisplayName\n     * @param {String} message\n     * @returns {String} HTML code to display\n     */\n    _formatRemoteShare: function _formatRemoteShare(shareWith, shareWithDisplayName, message) {\n      var parts = OCA.Sharing.Util._REMOTE_OWNER_REGEXP.exec(shareWith);\n      if (!parts || !parts[7]) {\n        // display avatar of the user\n        var avatar = '<span class=\"avatar\" data-username=\"' + escapeHTML(shareWith) + '\" title=\"' + message + ' ' + escapeHTML(shareWithDisplayName) + '\"></span>';\n        var hidden = '<span class=\"hidden-visually\">' + message + ' ' + escapeHTML(shareWithDisplayName) + '</span> ';\n        return avatar + hidden;\n      }\n      var userName = parts[2];\n      var userDomain = parts[4];\n      var server = parts[5];\n      var protocol = parts[6];\n      var serverPath = parts[8] ? parts[7] : ''; // no trailing slash on root\n\n      var tooltip = message + ' ' + userName;\n      if (userDomain) {\n        tooltip += '@' + userDomain;\n      }\n      if (server) {\n        tooltip += '@' + server.replace(protocol, '') + serverPath;\n      }\n      var html = '<span class=\"remoteAddress\" title=\"' + escapeHTML(tooltip) + '\">';\n      html += '<span class=\"username\">' + escapeHTML(userName) + '</span>';\n      if (userDomain) {\n        html += '<span class=\"userDomain\">@' + escapeHTML(userDomain) + '</span>';\n      }\n      html += '</span> ';\n      return html;\n    },\n    /**\n     * Loop over all recipients in the list and format them using\n     * all kind of fancy magic.\n     *\n    * @param {Object} recipients array of all the recipients\n    * @returns {String[]} modified list of recipients\n    */\n    _formatShareList: function _formatShareList(recipients) {\n      var _parent = this;\n      recipients = _.toArray(recipients);\n      recipients.sort(function (a, b) {\n        return a.shareWithDisplayName.localeCompare(b.shareWithDisplayName);\n      });\n      return $.map(recipients, function (recipient) {\n        return _parent._formatRemoteShare(recipient.shareWith, recipient.shareWithDisplayName, t('files_sharing', 'Shared with'));\n      });\n    },\n    /**\n     * Marks/unmarks a given file as shared by changing its action icon\n     * and folder icon.\n     *\n    * @param $tr file element to mark as shared\n    * @param hasShares whether shares are available\n    * @param hasLink whether link share is available\n    */\n    markFileAsShared: function markFileAsShared($tr, hasShares, hasLink) {\n      var action = $tr.find('.fileactions .action[data-action=\"Share\"]');\n      var type = $tr.data('type');\n      var icon = action.find('.icon');\n      var message, recipients, avatars;\n      var ownerId = $tr.attr('data-share-owner-id');\n      var owner = $tr.attr('data-share-owner');\n      var mountType = $tr.attr('data-mounttype');\n      var shareFolderIcon;\n      var iconClass = 'icon-shared';\n      action.removeClass('shared-style');\n      // update folder icon\n      if (type === 'dir' && (hasShares || hasLink || ownerId)) {\n        if (typeof mountType !== 'undefined' && mountType !== 'shared-root' && mountType !== 'shared') {\n          shareFolderIcon = OC.MimeType.getIconUrl('dir-' + mountType);\n        } else if (hasLink) {\n          shareFolderIcon = OC.MimeType.getIconUrl('dir-public');\n        } else {\n          shareFolderIcon = OC.MimeType.getIconUrl('dir-shared');\n        }\n        $tr.find('.filename .thumbnail').css('background-image', 'url(' + shareFolderIcon + ')');\n        $tr.attr('data-icon', shareFolderIcon);\n      } else if (type === 'dir') {\n        var isEncrypted = $tr.attr('data-e2eencrypted');\n        // FIXME: duplicate of FileList._createRow logic for external folder,\n        // need to refactor the icon logic into a single code path eventually\n        if (isEncrypted === 'true') {\n          shareFolderIcon = OC.MimeType.getIconUrl('dir-encrypted');\n          $tr.attr('data-icon', shareFolderIcon);\n        } else if (mountType && mountType.indexOf('external') === 0) {\n          shareFolderIcon = OC.MimeType.getIconUrl('dir-external');\n          $tr.attr('data-icon', shareFolderIcon);\n        } else {\n          shareFolderIcon = OC.MimeType.getIconUrl('dir');\n          // back to default\n          $tr.removeAttr('data-icon');\n        }\n        $tr.find('.filename .thumbnail').css('background-image', 'url(' + shareFolderIcon + ')');\n      }\n      // update share action text / icon\n      if (hasShares || ownerId) {\n        recipients = $tr.data('share-recipient-data');\n        action.addClass('shared-style');\n        avatars = '<span>' + t('files_sharing', 'Shared') + '</span>';\n        // even if reshared, only show \"Shared by\"\n        if (ownerId) {\n          message = t('files_sharing', 'Shared by');\n          avatars = this._formatRemoteShare(ownerId, owner, message);\n        } else if (recipients) {\n          avatars = this._formatShareList(recipients);\n        }\n        action.html(avatars).prepend(icon);\n        if (ownerId || recipients) {\n          var avatarElement = action.find('.avatar');\n          avatarElement.each(function () {\n            $(this).avatar($(this).data('username'), 32);\n          });\n        }\n      } else {\n        action.html('<span class=\"hidden-visually\">' + t('files_sharing', 'Shared') + '</span>').prepend(icon);\n      }\n      if (hasLink) {\n        iconClass = 'icon-public';\n      }\n      icon.removeClass('icon-shared icon-public').addClass(iconClass);\n    },\n    /**\n     * @param {Array} fileData\n     * @returns {String}\n     */\n    getSharePermissions: function getSharePermissions(fileData) {\n      return fileData.sharePermissions;\n    }\n  };\n})();\nOC.Plugins.register('OCA.Files.FileList', OCA.Sharing.Util);","/**\n * @copyright 2016 Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Roeland Jago Douma <roeland@famdouma.nl>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { Type as ShareTypes } from '@nextcloud/sharing';\n(function () {\n  'use strict';\n\n  var BreadCrumbView = OC.Backbone.View.extend({\n    tagName: 'span',\n    events: {\n      click: '_onClick'\n    },\n    _dirInfo: undefined,\n    render: function render(data) {\n      this._dirInfo = data.dirInfo || null;\n      if (this._dirInfo !== null && (this._dirInfo.path !== '/' || this._dirInfo.name !== '')) {\n        var isShared = data.dirInfo && data.dirInfo.shareTypes && data.dirInfo.shareTypes.length > 0;\n        this.$el.removeClass('shared icon-public icon-shared');\n        if (isShared) {\n          this.$el.addClass('shared');\n          if (data.dirInfo.shareTypes.indexOf(ShareTypes.SHARE_TYPE_LINK) !== -1) {\n            this.$el.addClass('icon-public');\n          } else {\n            this.$el.addClass('icon-shared');\n          }\n        } else {\n          this.$el.addClass('icon-shared');\n        }\n        this.$el.show();\n        this.delegateEvents();\n      } else {\n        this.$el.removeClass('shared icon-public icon-shared');\n        this.$el.hide();\n      }\n      return this;\n    },\n    _onClick: function _onClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var fileInfoModel = new OCA.Files.FileInfoModel(this._dirInfo);\n      var self = this;\n      fileInfoModel.on('change', function () {\n        self.render({\n          dirInfo: self._dirInfo\n        });\n      });\n      var path = fileInfoModel.attributes.path + '/' + fileInfoModel.attributes.name;\n      OCA.Files.Sidebar.open(path);\n      OCA.Files.Sidebar.setActiveTab('sharing');\n    }\n  });\n  OCA.Sharing.ShareBreadCrumbView = BreadCrumbView;\n})();","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/**\\n * @copyright 2016 Christoph Wurst <christoph@winzerhof-wurst.at>\\n *\\n * @author 2016 Christoph Wurst <christoph@winzerhof-wurst.at>\\n *\\n * @license GNU AGPL version 3 or any later version\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU Affero General Public License as\\n * published by the Free Software Foundation, either version 3 of the\\n * License, or (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU Affero General Public License for more details.\\n *\\n * You should have received a copy of the GNU Affero General Public License\\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n *\\n */\\ndiv.crumb span.icon-shared,\\ndiv.crumb span.icon-public {\\n  display: inline-block;\\n  cursor: pointer;\\n  opacity: 0.2;\\n  margin-right: 6px;\\n}\\n\\ndiv.crumb span.icon-shared.shared,\\ndiv.crumb span.icon-public.shared {\\n  opacity: 0.7;\\n}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./sharebreadcrumb.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./sharebreadcrumb.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"files_sharing-additionalScripts\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknextcloud\"] = self[\"webpackChunknextcloud\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"core-common\"], function() { return __webpack_require__(\"./apps/files_sharing/src/additionalScripts.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}